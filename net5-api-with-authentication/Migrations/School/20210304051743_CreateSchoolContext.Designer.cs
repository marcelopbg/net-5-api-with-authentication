// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using net_5_api_with_authentication.Data;

namespace net_5_api_with_authentication.Migrations.School
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20210304051743_CreateSchoolContext")]
    partial class CreateSchoolContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("net_5_api_with_authentication.Models.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseID");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            Credits = 44,
                            Title = "Programação Orientada a Objetos"
                        },
                        new
                        {
                            CourseID = 2,
                            Credits = 33,
                            Title = "Engenharia de Software"
                        },
                        new
                        {
                            CourseID = 3,
                            Credits = 25,
                            Title = "Introdução a Algoritmos"
                        },
                        new
                        {
                            CourseID = 4,
                            Credits = 15,
                            Title = "Desenvolvimento Web"
                        });
                });

            modelBuilder.Entity("net_5_api_with_authentication.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("EnrollmentID");

                    b.HasIndex("CourseID");

                    b.HasIndex("StudentID");

                    b.ToTable("Enrollment");

                    b.HasData(
                        new
                        {
                            EnrollmentID = 1,
                            CourseID = 1,
                            Grade = 1,
                            StudentID = 1
                        },
                        new
                        {
                            EnrollmentID = 2,
                            CourseID = 2,
                            Grade = 0,
                            StudentID = 2
                        },
                        new
                        {
                            EnrollmentID = 3,
                            CourseID = 3,
                            Grade = 2,
                            StudentID = 2
                        },
                        new
                        {
                            EnrollmentID = 4,
                            CourseID = 3,
                            Grade = 4,
                            StudentID = 3
                        },
                        new
                        {
                            EnrollmentID = 5,
                            CourseID = 4,
                            Grade = 3,
                            StudentID = 4
                        });
                });

            modelBuilder.Entity("net_5_api_with_authentication.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Student");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            EnrollmentDate = new DateTime(2021, 3, 4, 2, 17, 42, 995, DateTimeKind.Local).AddTicks(7002),
                            FirstMidName = "Pinto",
                            LastName = "Guimarães"
                        },
                        new
                        {
                            ID = 2,
                            EnrollmentDate = new DateTime(2021, 3, 4, 2, 17, 42, 997, DateTimeKind.Local).AddTicks(340),
                            FirstMidName = "One",
                            LastName = "Student"
                        },
                        new
                        {
                            ID = 3,
                            EnrollmentDate = new DateTime(2021, 3, 4, 2, 17, 42, 997, DateTimeKind.Local).AddTicks(365),
                            FirstMidName = "Student",
                            LastName = "Dedicated"
                        },
                        new
                        {
                            ID = 4,
                            EnrollmentDate = new DateTime(2021, 3, 4, 2, 17, 42, 997, DateTimeKind.Local).AddTicks(368),
                            FirstMidName = "Fernandes",
                            LastName = "Pedro"
                        },
                        new
                        {
                            ID = 5,
                            EnrollmentDate = new DateTime(2021, 3, 4, 2, 17, 42, 997, DateTimeKind.Local).AddTicks(370),
                            FirstMidName = "Anderle",
                            LastName = "Daniel"
                        });
                });

            modelBuilder.Entity("net_5_api_with_authentication.Models.Enrollment", b =>
                {
                    b.HasOne("net_5_api_with_authentication.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("net_5_api_with_authentication.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("net_5_api_with_authentication.Models.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("net_5_api_with_authentication.Models.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
